
import BaseDeDatos.Conection;
import Logica.UsuariosRegistrados;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.URL;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.LinkedList;
import java.util.Queue;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Carlollos Pc
 */
public class RegisterForm extends javax.swing.JFrame {


    String userTypeLocal;
    static Queue<UsuariosRegistrados> usersRegister;
    
    //Conexion
    static Conection localConection;
    
    //Imagen
    String newUserIcon;
    
    public RegisterForm(Conection cn) throws SQLException {
        initComponents();
        
        this.setLocationRelativeTo(null);
        //Titulo del frame
        this.setTitle("Friegate al vecino - Registrar");
        //Establecer el icono del frame
        URL iconURL = getClass().getResource("\\src\\images\\FondoCartas.jpg");
        ImageIcon icon = new ImageIcon(iconURL);
        this.setIconImage(icon.getImage());
        
        this.comboUserType.setVisible(false);
        this.txtImageRute.setVisible(false);
       
        //Detectar tipo de usuario
        this.userTypeLocal = "Normal";
        
        //Obtener usuarios registrados
        getUsersRegister(cn);
        
        //Establecer la conexion
        this.localConection = cn;
    }
    
    public RegisterForm(Conection cn , String userType) throws SQLException {
        initComponents();
        
        this.setLocationRelativeTo(null);
        //Titulo del frame
        this.setTitle("Friegate al vecino - Registrar");
        //Establecer el icono del frame
        URL iconURL = getClass().getResource("\\src\\images\\FondoCartas.jpg");
        ImageIcon icon = new ImageIcon(iconURL);
        this.setIconImage(icon.getImage());
        
        this.txtWelcomeMessage.setText("Bienvenido Administrador");
        this.txtImageRute.setVisible(false);
        
        //Detectar tipo de usuario
        this.userTypeLocal = "Admin";
        
        //Obtener usuarios registrados
        getUsersRegister(cn);
        
        //Establecer la conexion
        this.localConection = cn;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        txtWelcomeMessage = new javax.swing.JLabel();
        registerImage = new javax.swing.JLabel();
        btnSelectImage = new javax.swing.JButton();
        txtConfirmPassword = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        comboUserType = new javax.swing.JComboBox<>();
        iconRegister = new javax.swing.JLabel();
        txtWelcomeMessage1 = new javax.swing.JLabel();
        txtImageRute = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(45, 97, 135));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Confirmar Contraseña:");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre De Usuario:");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, -1));
        jPanel2.add(txtUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 340, -1));

        txtWelcomeMessage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtWelcomeMessage.setForeground(new java.awt.Color(255, 255, 255));
        txtWelcomeMessage.setText("Ingrese sus datos para poder jugar");
        jPanel2.add(txtWelcomeMessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, -1, 30));
        jPanel2.add(registerImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 370, 170, 190));

        btnSelectImage.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSelectImage.setText("Icono del jugador");
        btnSelectImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectImageActionPerformed(evt);
            }
        });
        jPanel2.add(btnSelectImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 170, -1));
        jPanel2.add(txtConfirmPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 340, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Contraseña:");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));
        jPanel2.add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 340, -1));

        comboUserType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Normal", "Admin"}));
        jPanel2.add(comboUserType, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 170, -1));

        iconRegister.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/images/addUser.png"))); // NOI18N
        jPanel2.add(iconRegister, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, 70, 80));

        txtWelcomeMessage1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtWelcomeMessage1.setForeground(new java.awt.Color(255, 255, 255));
        txtWelcomeMessage1.setText("Registrar");
        jPanel2.add(txtWelcomeMessage1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, -1, 30));
        jPanel2.add(txtImageRute, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 430, 170, -1));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Registrar! :D");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 480, 130, 60));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 370, 580));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/images/logout.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 40, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 418, 657));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelectImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectImageActionPerformed
        
        //Filtro de imagenes
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("JPG & PNG Imagenes", "jpg", "png");
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fileChooser.setFileFilter(filtro);
        fileChooser.setDialogTitle("Abrir Archivo");
        File ruta = new File("C:/Users/Carlollos/Documents/");
        fileChooser.setCurrentDirectory(ruta);
        int resultado = fileChooser.showOpenDialog(this);
        if (resultado != JFileChooser.CANCEL_OPTION) {
            File nombreArchivo = fileChooser.getSelectedFile();
            String nombreImagen = String.valueOf(nombreArchivo);
            Image foto = getToolkit().getImage(nombreImagen);
            
            
            this.newUserIcon = nombreImagen;
            
            this.txtImageRute.setText(nombreImagen);
            
            //Cambiar escala de imagen
            foto = foto.getScaledInstance(registerImage.getWidth(), registerImage.getHeight(), Image.SCALE_DEFAULT);
            registerImage.setIcon(new ImageIcon(foto));
        }
        
        
    }//GEN-LAST:event_btnSelectImageActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked

        try {
            LoginFrame VentanaPrincipal = new LoginFrame();
            VentanaPrincipal.setVisible(true);
            this.setVisible(false);
        } catch (SQLException ex) {
            Logger.getLogger(RegisterForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jLabel3MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
          
        //Validar usuario repetido
        boolean flagValidation = true;
        for (UsuariosRegistrados usuariosRegistrados : usersRegister) {
            if(usuariosRegistrados.userName.equalsIgnoreCase(txtUserName.getText())){
                flagValidation = false;
                JOptionPane.showMessageDialog(this, "Este nombre de usuario no esta disponible");
            }
        }
        
        //Validacion de contraseñas
       
        if(!(txtPassword.getText().equals(txtConfirmPassword.getText()))){
            flagValidation = false;
            JOptionPane.showMessageDialog(this, "Los campos de contraseñas deben coincidir");
        }
        
        //Validacion imagen
        if(txtImageRute.getText().equalsIgnoreCase("")){
            flagValidation = false;
            JOptionPane.showMessageDialog(this, "Porfavor ingrese una imagen");
        }
        
        UsuariosRegistrados newUser;
        
        //Detectar si hubo un errro
        if(flagValidation){
            try {
                if(this.userTypeLocal.equalsIgnoreCase("Normal")){
                    newUser = new UsuariosRegistrados(this.txtUserName.getText() , this.txtPassword.getText() , this.newUserIcon , 0 , "Normal", 0);
                }else{
                    newUser = new UsuariosRegistrados(this.txtUserName.getText() , this.txtPassword.getText() , this.newUserIcon , 0 , "Admin" , 0);
                }
                
                saveNewUser(newUser);
                
                new LoginFrame().setVisible(true);
                this.setVisible(false);
               
            } catch (IOException ex) {
                Logger.getLogger(RegisterForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(RegisterForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /*OTROS METODOS*/
    public static void getUsersRegister(Conection cn) throws SQLException{
        
        
        String sql = "SELECT * FROM users";
        ResultSet resul = cn.Conectarse().createStatement().executeQuery(sql);
        ResultSetMetaData resulSetMetaData = resul.getMetaData();
        
        int columLength = resulSetMetaData.getColumnCount();
        
        //Todos los usuarios
        usersRegister = new LinkedList();
        
        while (resul.next()) { //mientras la tabla tenga registros
            String [] fila=new String[columLength];
            for(int j=0;j<columLength;j++){
                fila[j]=resul.getString(j+1);
            }
            UsuariosRegistrados newUser = new UsuariosRegistrados(fila);
            usersRegister.add(newUser);
            
        }
         
    }
    
    public static void saveNewUser(UsuariosRegistrados newUser) throws IOException{
        
        String sentenciaSql="INSERT INTO users(userName,password,image,gamesPlayed,userType,gamesWined)VALUES(?,?,?,?,?,?)";
        
       try {
            //++++++++++ Convertir la imagen
             FileInputStream archivofoto;
            archivofoto= new FileInputStream(newUser.image);
            //++++++++++++++++++++++++++++
            
            Conection con = new Conection();
            PreparedStatement pst = con.Conectarse().prepareStatement(sentenciaSql);
            
            pst.setString(1, newUser.userName);
            pst.setString(2, newUser.password);
            pst.setBinaryStream(3, archivofoto);
            pst.setInt(4, newUser.gamesPlayed);
            pst.setString(5, newUser.userType);
            pst.setInt(6, newUser.gamesWined);
            
            int n=pst.executeUpdate();
            if (n>0) {
                JOptionPane.showMessageDialog(null, "Usuario creado correctamente", "Confirmación", JOptionPane.INFORMATION_MESSAGE);   
            }
            con.CerrarConexion();
            
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null,"Clase no encontrada: "+ex,"Error",JOptionPane.ERROR_MESSAGE);
        } catch (InstantiationException ex) {
            JOptionPane.showMessageDialog(null,"Error de instancia "+ex,"Error",JOptionPane.ERROR_MESSAGE);
        } catch (IllegalAccessException ex){
            JOptionPane.showMessageDialog(null,"Mal acceso a la BD: "+ex,"Error",JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex){
            JOptionPane.showMessageDialog(null,"Error en la sentencia: "+ex,"Error",JOptionPane.ERROR_MESSAGE);
        } catch (FileNotFoundException ex){
            JOptionPane.showMessageDialog(null,"Error Archivo de Imagen no encontrada: "+ex,"Error",JOptionPane.ERROR_MESSAGE);
        }
        
    }
    
    
    public static BufferedImage getBufferedImage(Image img)
    {
        if (img instanceof BufferedImage)
        {
           return (BufferedImage) img;
        }

        BufferedImage bimage = new BufferedImage(img.getWidth(null), 
                        img.getHeight(null), BufferedImage.TYPE_INT_ARGB);

        Graphics2D bGr = bimage.createGraphics();
        bGr.drawImage(img, 0, 0, null);
        bGr.dispose();

        // Return the buffered image
        return bimage;
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSelectImage;
    private javax.swing.JComboBox<String> comboUserType;
    private javax.swing.JLabel iconRegister;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel registerImage;
    private javax.swing.JPasswordField txtConfirmPassword;
    private javax.swing.JTextField txtImageRute;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUserName;
    private javax.swing.JLabel txtWelcomeMessage;
    private javax.swing.JLabel txtWelcomeMessage1;
    // End of variables declaration//GEN-END:variables
}


