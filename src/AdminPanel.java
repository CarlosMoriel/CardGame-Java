
import BaseDeDatos.Conection;
import Logica.UsuariosRegistrados;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Carlollos Pc
 */
public class AdminPanel extends javax.swing.JPanel {

     UsuariosRegistrados userActual; 
    
    /**
     * Creates new form AdminPanel
     */
    public AdminPanel(UsuariosRegistrados userActual) {
        initComponents();
        
        this.userActual = userActual;
        
        this.panelAdminFunctions.setVisible(false);
        
        getAllUsers();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableAllUsers = new javax.swing.JTable();
        panelAdminFunctions = new javax.swing.JPanel();
        btnDelete = new javax.swing.JButton();
        btnDoAdmin = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tableAllUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tableAllUsers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableAllUsersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableAllUsers);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 250, 560, -1));

        btnDelete.setText("Borrar Usuario");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnDoAdmin.setText("Hacer administrador");
        btnDoAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoAdminActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAdminFunctionsLayout = new javax.swing.GroupLayout(panelAdminFunctions);
        panelAdminFunctions.setLayout(panelAdminFunctionsLayout);
        panelAdminFunctionsLayout.setHorizontalGroup(
            panelAdminFunctionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdminFunctionsLayout.createSequentialGroup()
                .addContainerGap(124, Short.MAX_VALUE)
                .addComponent(btnDelete)
                .addGap(75, 75, 75)
                .addComponent(btnDoAdmin)
                .addGap(131, 131, 131))
        );
        panelAdminFunctionsLayout.setVerticalGroup(
            panelAdminFunctionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAdminFunctionsLayout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addGroup(panelAdminFunctionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnDoAdmin))
                .addGap(50, 50, 50))
        );

        add(panelAdminFunctions, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, 560, 130));

        jLabel1.setText("Todos los usuarios registrados");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 230, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Administrar usuarios");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 20, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        
        this.panelAdminFunctions.setVisible(false);
        
        int fila = tableAllUsers.getSelectedRow();
            
        int idUsuario = Integer.parseInt(tableAllUsers.getValueAt(fila, 0).toString());
        
        if(idUsuario == this.userActual.id){
            JOptionPane.showMessageDialog(this, "No se puede eliminar a su propio usuario");
        }else{
            try {
            String sql;
            Conection con = new Conection();
            Statement sentenciaSQL=con.Conectarse().createStatement(); //crear consulta
           
               String query = "delete from users where id = ?";
                PreparedStatement preparedStmt = con.Conectarse().prepareStatement(query);
                preparedStmt.setInt(1, idUsuario);

                // execute the preparedstatement
                preparedStmt.execute();
            
            
          
            con.CerrarConexion();
            } catch (ClassNotFoundException | IllegalAccessException | InstantiationException | SQLException ex) {
                JOptionPane.showMessageDialog(null,"Error: "+ex,"Error",JOptionPane.ERROR_MESSAGE);
            }  
        }
            
        
       
        
        getAllUsers();
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnDoAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoAdminActionPerformed
      
        this.panelAdminFunctions.setVisible(false);
        
         int fila = tableAllUsers.getSelectedRow();
            
         int idUsuario = Integer.parseInt(tableAllUsers.getValueAt(fila, 0).toString());
         
         try {
            String sql;
            Conection con = new Conection();
            Statement sentenciaSQL=con.Conectarse().createStatement(); //crear consulta
            sql = "UPDATE users SET userType='Admin' WHERE id="+idUsuario;
            sentenciaSQL.executeUpdate(sql);
            
            
            
            con.CerrarConexion();
        } catch (ClassNotFoundException | IllegalAccessException | InstantiationException | SQLException ex) {
            JOptionPane.showMessageDialog(null,"Error: "+ex,"Error",JOptionPane.ERROR_MESSAGE);
        }
        
        getAllUsers();
        
    }//GEN-LAST:event_btnDoAdminActionPerformed

    private void tableAllUsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableAllUsersMouseClicked
       
         if(evt.getButton()==1){
            this.panelAdminFunctions.setVisible(true);
         }
         
        
        
    }//GEN-LAST:event_tableAllUsersMouseClicked

    
    
        public void getAllUsers(){
           
        try {
            String sql;
            Conection con = new Conection();
            Statement sentenciaSQL=con.Conectarse().createStatement(); //crear consulta
            sql = "SELECT id, userName, gamesPlayed, gamesWined, userType FROM users";
            ResultSet rs= sentenciaSQL.executeQuery(sql);
            ResultSetMetaData rsm=rs.getMetaData();
            int col=rsm.getColumnCount();
            DefaultTableModel modelo=new DefaultTableModel();
            for(int i=1;i<=col;i++){
                modelo.addColumn(rsm.getColumnLabel(i));//para poner los encabezados de la tabla
            }
            while (rs.next()) {//mientras la tabla tenga registros
                String [] fila=new String[col];
                for(int j=0;j<col;j++){
                    fila[j]=rs.getString(j+1);
                }
                modelo.addRow(fila);
            }
            
            this.tableAllUsers.setModel(modelo);//asignando una tabla llena a una tabla vacÃ­a
            rs.close();
            con.CerrarConexion();
        } catch (ClassNotFoundException | IllegalAccessException | InstantiationException | SQLException ex) {
            JOptionPane.showMessageDialog(null,"Error: "+ex,"Error",JOptionPane.ERROR_MESSAGE);
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDoAdmin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelAdminFunctions;
    private javax.swing.JTable tableAllUsers;
    // End of variables declaration//GEN-END:variables
}
